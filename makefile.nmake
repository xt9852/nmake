#------------------------------------------------------------
# 字符集GB2312,编码方案也是GB2312
# 字符集Unicode,编码方案它有多个:UTF-8,UTF-16(标准方案),UTF-32都是
# 
# FILES_OBJ = $(FILES_SRC:.cpp=.obj) # 将.cpp替换成.obj
# FILES_OBJ = $(FILES_OBJ:.c=.obj)   # 将.c  替换成.obj
#------------------------------------------------------------

NAME                = example           # 程序名称
EXT                 = exe               # exe,dll,lib
DEBUG               = debug             # debug,release
CHARSET             = mbcs              # mbcs,unicode
BIN                 = .                 # 生成文件目录
TMP                 = .\tmp             # 临时文件目录
SRC                 = .\src             # 源文件目录
FILE_RC             = .\res\example.rc  # 资源描述文件

# 资源文件
FILE_RES            = $(TMP)\example.res

# 文件列表
FILES_SRC           = example.c\
                      dll\example-dll1.c\
                      dll\example-dll2.cpp

# 对象列表
FILES_OBJ           = $(FILE_RES)\
                      $(TMP)\example.obj\
                      $(TMP)\example-dll1.obj
# 编译参数
CFLAGS              =

# 链接参数
LFLAGS              = User32.lib Ws2_32.lib gdi32.lib # 排除默认库 /NODEFAULTLIB:"LIBCMT"

#------------------------------------------------------------
# 可执行命令

CC                  = cl.exe    # c编译器
ML                  = ml.exe    # 汇编编译器
RC                  = rc.exe    # 资源编译器
LIB                 = lib.exe   # 静态库生成器
LNK                 = link.exe  # 连接器

#------------------------------------------------------------
# 设置路径
# MSVC_ARCH_TYPE,PATH_MSVC_LIB,PATH_KIT_LIB_UM,PATH_KIT_LIB_UCRT由外部make.bat设置

INCLUDE             = /I"$(PATH_MSVC_INCLUDE)" /I"$(PATH_KIT_INCLUDE_UM)" /I"$(PATH_KIT_INCLUDE_UCRT)" /I"$(PATH_KIT_INCLUDE_SHARED)"
LIBPATH             = /LIBPATH:"$(PATH_MSVC_LIB)" /LIBPATH:"$(PATH_KIT_LIB_UM)" /LIBPATH:"$(PATH_KIT_LIB_UCRT)"

#------------------------------------------------------------
# 编译参数
# /c                    只编译,不链接
# /Gd                   调用约定:_cdecl
# /GS                   启用安全检查
# /W3                   警告等级3
# /WX-                  将警告视为错误
# /FC                   使用完整路径
# /EHsc                 启用C++异常
# /sdl                  启用SDL检查
# /Gm-                  停用最小重新生成
# /nologo               不显示版权信息
# /permissive-          符合模式
# /Zc:wchar_t           将wchar_t视为类型
# /Zc:inline            移除未引用代码和数据
# /Zc:forScope          for循环范围检查
# /fp:precise           浮点模型:精度
# /diagnostics:column   诊断格式:列
# /errorReport:prompt   错误报告:立即提示
# /Fo:"$(TMP)/"         输出路径
# /Fd:"$(TMP)/"         vc***.pdb路径
# /D "_WINDOWS"
#-----------------------debug-----
# /JMC                  支持仅我的代码调试
# /ZI                   启用“编辑并继续”调试信息
# /Od                   禁用优化
# /RTC1                 运行时检查
#-----------------------release-----
# /Zi                   启用调试信息
# /O2                   最大化速度
# /Oi                   启用内部函数
# /GL                   启用链接时代码生成
# /Gy                   分隔链接器函数

# 公共配置
CFLAGS              = $(CFLAGS) /c /Gd /GS /W3 /WX /FC /sdl /EHsc /sdl \
                      /Gm- /nologo /permissive- \
                      /Zc:wchar_t /Zc:inline /Zc:forScope \
                      /fp:precise /diagnostics:column /errorReport:prompt \
                      /Fo:"$(TMP)/" /Fd:"$(TMP)/" /D "_WINDOWS"

# 构建类型:debug,release
!IF "$(DEBUG)" == "debug"
CFLAGS              = $(CFLAGS) $(INCLUDE) /D"_DEBUG" /JMC /ZI /Od /RTC1
!ELSE
CFLAGS              = $(CFLAGS) $(INCLUDE) /D"NDEBUG" /Zi /O2 /Oi /GL /Gy
!ENDIF

# 程序架构类型:x64,x86
!IF "$(MSVC_ARCH_TYPE)" == "x64"
CFLAGS              = $(CFLAGS) /D"_WIN64" /D"X64"
!ELSE
CFLAGS              = $(CFLAGS) /D"_WIN32" /D"WIN32"
!ENDIF

# 字符集类型:mbcs,unicode
!IF "$(CHARSET)" == "mbcs"
CFLAGS              = $(CFLAGS) /D"_MBCS"
!ELSE
CFLAGS              = $(CFLAGS) /D"_UNICODE" /D"UNICODE"
!ENDIF

#------------------------------------------------------------
# 连接参数
# /MANIFEST             生成清单
# /NXCOMPAT             数据执行保护DEP
# /ERRORREPORT:PROMPT   错误报告:立即提示
# /NOLOGO               不显示版权信息
# /TLBID:1
#-----------------------debug-----
# /DEBUG                生成调试信息
# /INCREMENTAL          启用增量链接
#-----------------------release-----
# /INCREMENTAL:NO       不启用增量链接
# /OPT:REF              引用
# /LTCG:incremental     使用快速时间代码生成
# /SAFESEH              映像具有安全异常处理程序

LFLAGS              = $(LFLAGS) /MANIFEST /NXCOMPAT /ERRORREPORT:PROMPT /TLBID:1 #/NOLOGO 

# 构建类型:debug,release
!IF "$(DEBUG)" == "debug"
LFLAGS              = $(LFLAGS) $(LIBPATH) /DEBUG /INCREMENTAL
!ELSE
LFLAGS              = $(LFLAGS) $(LIBPATH) /INCREMENTAL:NO /OPT:REF /LTCG:incremental /SAFESEH
!ENDIF

!IF "$(EXT)" == "exe"
OUT                 = "$(TMP)\$(NAME).exe"
LFLAGS              = $(LFLAGS) /OUT:$(OUT)
!ELSEIF "$(EXT)" == "dll"
OUT                 = "$(TMP)\$(NAME).dll"
LFLAGS              = $(LFLAGS) /OUT:$(OUT) /DLL
!ELSEIF "$(EXT)" == "lib"
OUT                 = "$(TMP)\$(NAME).lib"
LFLAGS              = /OUT:$(OUT)
LNK                 = $(LIB)
!ENDIF

#------------------------------------------------------------
# 编译依赖

all : TMP REC OBJ TARGET

TMP :
    if not exist "$(TMP)" mkdir $(TMP)
    
REC : $(FILE_RC)
    $(RC) /nologo /fo"$(FILE_RES)" $**

OBJ : $(FILES_SRC)
    $(CC) $** $(CFLAGS)

TARGET : $(FILES_OBJ)
    $(LNK) $** $(LFLAGS)
    move $(OUT) $(BIN)
